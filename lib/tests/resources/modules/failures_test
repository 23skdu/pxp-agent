#!/usr/bin/env ruby
require 'json'
require_relative './check_output'

def action_metadata
   metadata = {
    :description => "schema for a test module for testing failures",
    :actions => [
      { :name => "get_an_invalid_result",
        :description => "sure this fails",
        :input => {
          :type => "object",
          :properties => {
            :argument => {
              :type => "string",
            },
          },
          :required => [ :argument ],
        },
        :results => {
          :type => "object",
          :properties => {
            :output => {
              :type => "string",
            },
          },
          :required => [ :output ],
        },
      },
      { :name => "broken_action",
        :description => "sure this fails",
        :input => {
          :type => "object",
          :properties => {
            :argument => {
              :type => "string",
            },
          },
          :required => [ :argument ],
        },
        :results => {
          :type => "object",
          :properties => {
            :output => {
              :type => "string",
            },
          },
          :required => [ :output ],
        },
      },
    ],
  }

  puts metadata.to_json
end

def action_get_an_invalid_result
  args = JSON.load($stdin)
  check_output_files(args)
  puts "not valid JSON - it will not be parsed successfully!"
end

def action_broken_action
  args = JSON.load($stdin)
  check_output_files(args)
  $stderr.puts "we failed, sorry :("
  raise "ops, we failed!"
end

action = ARGV.shift || 'metadata'

Object.send("action_#{action}".to_sym)
